CREATE TABLE fortune_companies (
    company_id INTEGER PRIMARY KEY,
    company_name TEXT,
    industry TEXT,
    revenue REAL,
    employees INTEGER,
    healthcare_benefits BIT,
    paid_time_off_days INTEGER,
    maternity_leave_weeks INTEGER,
    avg_employee_tenure REAL
);

INSERT INTO fortune_companies (company_name, industry, revenue, employees, healthcare_benefits, paid_time_off_days, maternity_leave_weeks, avg_employee_tenure)
VALUES
    ('Apple Inc.', 'Technology', 365.7, 147000, 1, 20, 12, 4.5),
    ('Walmart Inc.', 'Retail', 523.96, 2200000, 1, 15, 8, 6.2),
    ('Exxon Mobil Corporation', 'Energy', 265.01, 72000, 0, 18, 6, 7.8),
    ('Amazon.com Inc.', 'Technology', 386.06, 1370000, 1, 22, 14, 5.1),
    ('JPMorgan Chase & Co.', 'Financials', 160.1, 255998, 1, 21, 12, 6.9),
    ('Verizon Communications Inc.', 'Telecommunications', 131.88, 132600, 0, 15, 6, 5.5),
    ('Company A', 'Retail', 235.4, 2000, 1, 18, 10, 5.8),
    ('Company B', 'Healthcare', 400.7, 2300, 1, 22, 13, 5.7),
    ('Company C', 'Manufacturing', 300.2, 2000, 1, 18, 10, 5.8),
    ('Company D', 'Healthcare', 150.5, 3500, 1, 20, 12, 6.5),
    ('Company E', 'Finance', 280.7, 1800, 0, 14, 8, 4.2),
    ('Company F', 'Technology', 420.1, 2500, 1, 22, 14, 7.1),
    ('Company G', 'Retail', 190.8, 1500, 1, 16, 9, 5.3),
    ('Company H', 'Energy', 280.5, 2200, 0, 15, 8, 6.8),
    ('Company I', 'Telecommunications', 110.3, 1800, 1, 19, 11, 4.9),
    ('Company J', 'Manufacturing', 390.6, 2700, 1, 21, 13, 6.2),
    ('Company K', 'Healthcare', 180.2, 3200, 1, 17, 9, 7.4),
    ('Company L', 'Finance', 230.4, 1900, 0, 13, 7, 5.6),
    ('Company M', 'Technology', 340.9, 2800, 1, 23, 15, 6.9),
    ('Company N', 'Retail', 200.6, 1600, 1, 15, 8, 4.7),
    ('Company O', 'Energy', 260.2, 2400, 0, 14, 7, 6.1),
    ('Company P', 'Telecommunications', 130.5, 2100, 1, 20, 12, 5.3),
    ('Company Q', 'Manufacturing', 360.0, 2900, 1, 22, 14, 7.8),
    ('Company R', 'Technology', 400.7, 2300, 1, 22, 13, 5.7),
    ('Company S', 'Retail', 210.8, 1600, 0, 16, 9, 4.9),
    ('Company T', 'Energy', 290.5, 2200, 1, 15, 8, 7.2),
    ('Company U', 'Telecommunications', 140.3, 1900, 1, 20, 12, 6.1),
    ('Company V', 'Manufacturing', 350.6, 2800, 1, 22, 14, 5.4),
    ('Company W', 'Healthcare', 160.2, 3300, 0, 18, 10, 4.8),
    ('Company X', 'Finance', 240.4, 2000, 1, 13, 7, 7.1),
    ('Company Y', 'Technology', 320.9, 2700, 1, 23, 15, 5.6),
    ('Company Z', 'Retail', 180.6, 1400, 0, 14, 8, 6.3),
    ('Company AA', 'Energy', 240.2, 2600, 1, 17, 9, 6.5),
    ('Company BB', 'Telecommunications', 120.5, 2100, 0, 19, 11, 4.5),
    ('Company CC', 'Manufacturing', 380.0, 3000, 1, 21, 13, 7.3),
    ('Company DD', 'Healthcare', 170.2, 3200, 1, 17, 9, 5.8),
    ('Company EE', 'Finance', 250.4, 1900, 0, 12, 6, 6.4),
    ('Company FF', 'Technology', 300.9, 2500, 1, 24, 16, 6.9),
    ('Company GG', 'Retail', 190.6, 1700, 0, 13, 7, 5.2),
    ('Company HH', 'Energy', 280.2, 2300, 1, 16, 9, 6.8),
    ('Company II', 'Telecommunications', 110.5, 2000, 1, 21, 12, 4.9),
    ('Company JJ', 'Manufacturing', 370.0, 3100, 1, 20, 12, 7.6),
    ('Company KK', 'Healthcare', 150.2, 3400, 0, 16, 8, 5.3);

-- Hypothelically, If I say that I wanted to invest in 5 of the companies that are available to me in this set of data, I would write some queries that would get me valuable information about the benefits I could potentially have.

-- First, I would like to see the best performing industry in terms of average revenue, after that I would also like to see the best performing companies, seeing them individually could tell me if there's a company worth buying stocks from even if its not in one of the best performing industries in terms of revenue.

SELECT count(company_name), industry, avg(revenue)
FROM fortune_companies
GROUP BY industry
ORDER BY AVG(revenue) desc;

SELECT company_name, industry, revenue
FROM fortune_companies
ORDER BY revenue desc;

-- As it can be seen, the best performing companies seem to be in the Technology and Manufacturing industries, but, when we see them individually and ordered by revenue, the best performing company is Walmart, which is not part of the technology or manufacturing industries. Now, if I wanted to do the individual analysis again but only including the top 10 companies, it would look like this.

SELECT company_name, industry, revenue
FROM fortune_companies
ORDER BY revenue desc
LIMIT 10;

-- Now it can be seen that the Manufacturing and Technology industries have both exactly 40% of the top 10 companies by revenue, while the Retail company, Walmart, has 10% (being that company the best performing one), and Company B of the Healtcare industry the remaining 10% (being this company the third best performing one).

-- To me is particularly important that the companies give good benefits to its workers, I see it as a way of improving the reputation. I want to invest in a company that is both good in revenue and reputation. Also, as an investor, I want a company that uses its employees efficiently to make revenue, to check that I am going to divide the amount of workers in a company by the revenue.

SELECT company_name, industry, healthcare_benefits, employees/revenue AS revenue_by_employee,
CASE WHEN healthcare_benefits = 1
AND maternity_leave_weeks >= (SELECT avg(maternity_leave_weeks) FROM fortune_companies)
AND paid_time_off_days >= (SELECT avg(paid_time_off_days) FROM fortune_companies)
AND employees/revenue >= (SELECT avg(employees/revenue) FROM fortune_companies)
THEN 'Approved'
ELSE 'Not Approved'
END AS better_than_average
FROM fortune_companies
GROUP BY company_name
HAVING employees/revenue >= (SELECT avg(employees/revenue) FROM fortune_companies)
ORDER BY revenue_by_employee desc

SELECT company_name, industry, healthcare_benefits, employees/revenue AS revenue_by_employee,
CASE WHEN healthcare_benefits = 1
AND maternity_leave_weeks >= (SELECT avg(maternity_leave_weeks) FROM fortune_companies)
AND paid_time_off_days >= (SELECT avg(paid_time_off_days) FROM fortune_companies)
AND employees/revenue >= (SELECT avg(employees/revenue) FROM fortune_companies)
THEN 'Approved'
ELSE 'Not Approved'
END AS better_than_average
FROM fortune_companies
ORDER BY revenue_by_employee desc
LIMIT 10;

-- By the conditions I put, the output of the query was that 3 out of 6 companies have more than the average revenue by employee ratio and have been "approved", meaning that they give: healtcare, more than the average of paid time off days and more than the average maternity leave weeks.

-- The condition was to pick 5 companies, using the data of the last query I pick the 3 companies approved that also have more than average revenue by employee (that would be Amazon.com Inc., JPMorgan Chase & Co. and Apple Inc), and the 2 best performing companies in terms of revenue only if they gave healhtcare benefits to their employees, that would be Walmart (also the best performing one in revenue by employee) and Company F.
